<Ui>
	<Frame name="LittleBattlerAbilityTip" inherits="SharedPetBattleAbilityTooltipTemplate"/>
	<Frame name="LittleBattlerAuxAbilityTip" inherits="SharedPetBattleAbilityTooltipTemplate"/>
	<Script>
	local info = SharedPetBattleAbilityTooltip_GetInfoTable()
	function info:GetAbilityID() return self.abilityID end
	function info:IsInBattle() return false end
	function info:GetHealth(target) return self.hp end
	function info:GetMaxHealth(target) return self.hp end
	function info:GetAttackStat(target) return self.attack end
	function info:GetSpeedStat(target) return self.speed end
	function info:GetPetType(target) return self.petType end

	function LB_ShowAbilityTooltip(self, id, sid, ap, sp, hp, id2)
		local _, _, pt = C_PetJournal.GetPetInfoBySpeciesID(sid)
		info.abilityID, info.speciesID, info.petType, info.hp, info.attack, info.speed = id, sid, pt, hp or 0, ap or 0, sp or 0

		LittleBattlerAbilityTip:ClearAllPoints()
		LittleBattlerAbilityTip:SetPoint("TOPLEFT", self, "TOPRIGHT", 5, 2)
		LittleBattlerAbilityTip.owner = self
		SharedPetBattleAbilityTooltip_SetAbility(LittleBattlerAbilityTip, info, nil)
		LittleBattlerAbilityTip:Show()
		if id2 then
			info.abilityID = id2
			LittleBattlerAuxAbilityTip:SetPoint("TOPLEFT", LittleBattlerAbilityTip, "TOPRIGHT", 3, 0)
			SharedPetBattleAbilityTooltip_SetAbility(LittleBattlerAuxAbilityTip, info, nil)
			LittleBattlerAuxAbilityTip:SetScale(0.75)
			LittleBattlerAuxAbilityTip:Show()
		else
			LittleBattlerAuxAbilityTip:Hide()
		end
	end
	function LB_HideAbilityTooltip(self)
		if LittleBattlerAbilityTip.owner == self then
			LittleBattlerAbilityTip:Hide()
			LittleBattlerAuxAbilityTip:Hide()
		end
	end
	function LB_ShowAbilityButtonTooltip(self)
		LB_ShowAbilityTooltip(self, self.id, self:GetParent().id, self:GetParent().ap, self:GetParent().sp, self:GetParent().hp, self.id2)
	end
	function LB_PropagateReceiveDrag(self)
		local p = self:GetParent()
		while p do
			local ph = p:GetScript("OnReceiveDrag")
			if ph then return ph(p) end
			p = p:GetParent()
		end
	end
	function LB_PickupPet(self)
		if not InCombatLockdown() and self.petGUID then
			C_PetJournal.PickupPet(self.petGUID)
			LB_CursorPetGUID, LB_CursorPetInfo = self.petGUID, self.petInfo
		end
	end
	</Script>

	<Button name="LBPetAbilityTemplate" virtual="true">
		<Size x="32" y="32" />
		<Layers>
			<Layer level="ARTWORK" textureSubLevel="1">
				<Texture parentKey="iconBorder" file="Interface\AddOns\LittleBattler\i\border" setAllPoints="true"/>
			</Layer>
			<Layer level="ARTWORK">
				<Texture parentKey="icon" file="Interface\Icons\Temp">
					<Anchors>
						<Anchor point="TOPLEFT" relativeKey="$parent.iconBorder" x="1" y="-1"/>
						<Anchor point="BOTTOMRIGHT" relativeKey="$parent.iconBorder"  x="-1" y="1"/>
					</Anchors>
				</Texture>
			</Layer>
		</Layers>
		<HighlightTexture file="Interface\AddOns\LittleBattler\i\iglow" alphaMode="ADD"/>
		<Scripts>
			<OnLoad>self:RegisterForClicks("LeftButtonUp", "RightButtonUp")</OnLoad>
			<OnEnter function="LB_ShowAbilityButtonTooltip" />
			<OnLeave function="LB_HideAbilityTooltip" />
			<OnClick>
				if button == "RightButton" and self.id2 then
					C_PetJournal.SetAbility(self:GetParent():GetID(), self:GetID(), self.id2)
				elseif IsModifiedClick("CHATLINK") then
					local p, _, name = self:GetParent(), C_PetBattles.GetAbilityInfoByID(self.id)
					ChatEdit_InsertLink(("|cff4e96f7|HbattlePetAbil:%d:%d:%d:%d|h[%s]|h|r"):format(self.id, p.mhp or 100, p.ap or 0, p.sp or 0, name))
				end
			</OnClick>
		</Scripts>
	</Button>
	<Button name="LBKillablePetTemplate" virtual="true">
		<Layers>
			<Layer level="ARTWORK" textureSubLevel="2">
				<Texture file="Interface\PetBattles\DeadPetIcon" parentKey="dead" setAllPoints="true"/>
			</Layer>
		</Layers>
	</Button>
	<Button name="LBPoolPetTemplate" inherits="LBPetAbilityTemplate,LBKillablePetTemplate" virtual="true" hidden="true">
		<Scripts>
			<OnLoad>self:RegisterForDrag("LeftButton") self.petGUID = ("0x%016X"):format(0xdc85ec) self:SetScript("OnHide", self.Hide)</OnLoad>
			<OnEnter>LittleBattlerPetTip:SetPet(self, self.petGUID, self.petInfo, LittleBattlerTeam2.pets[1].id, LittleBattlerTeam2.pets[2].id, LittleBattlerTeam2.pets[3].id)</OnEnter>
			<OnLeave>if LittleBattlerPetTip:IsOwned(self) then
				LittleBattlerPetTip:Hide()
			end</OnLeave>
			<OnDragStart function="LB_PickupPet"/>
			<OnReceiveDrag function="LB_PropagateReceiveDrag"/>
		</Scripts>
	</Button>
	<Frame name="LBTamerPetTemplate" virtual="true">
		<Size x="302" y="54"/>
		<Layers>
			<Layer level="BACKGROUND">
				<Texture parentKey="bgStripe" alpha="0">
					<Anchors>
						<Anchor point="TOPLEFT" x="-6" y="3" />
						<Anchor point="BOTTOMRIGHT" x="12" y="-6" />
					</Anchors>
					<Color r="1" g="1" b="1" />
				</Texture>
			</Layer>
			<Layer level="ARTWORK">
				<FontString parentKey="name" inherits="GameFontNormalMed3">
					<Anchors><Anchor point="TOPLEFT" y="-2"/></Anchors>
				</FontString>
				<FontString parentKey="stats" inherits="GameFontHighlightSmallLeftTop">
					<Size x="200" y="0"/>
					<Anchors><Anchor point="TOPLEFT" relativePoint="BOTTOMLEFT" relativeKey="$parent.name" y="-5" /></Anchors>
				</FontString>
			</Layer>
		</Layers>
		<Frames>
			<Button parentKey="iconButton">
				<Size x="52" y="52" />
				<Anchors><Anchor point="RIGHT" x="4" /></Anchors>
				<Layers>
					<Layer level="ARTWORK" textureSubLevel="1">
						<Texture parentKey="border" file="Interface\AddOns\LittleBattler\i\border" setAllPoints="true" />
					</Layer>
					<Layer level="ARTWORK">
						<Texture parentKey="icon" file="Interface\Icons\Temp">
							<Anchors>
								<Anchor point="TOPLEFT" relativeKey="$parent.border" x="2" y="-2"/>
								<Anchor point="BOTTOMRIGHT" relativeKey="$parent.border" x="-2" y="2"/>
							</Anchors>
						</Texture>
					</Layer>
					<Layer level="ARTWORK" textureSubLevel="2">
						<Texture file="Interface\AddOns\LittleBattler\i\cir" parentKey="levelBG">
							<Size x="20" y="20"/>
							<Anchors><Anchor point="BOTTOMRIGHT" relativeKey="$parent.border" x="5" y="-5"/></Anchors>
						</Texture>
					</Layer>
					<Layer level="OVERLAY">
						<FontString inherits="GameFontNormalSmall" parentKey="level">
							<Anchors>
								<Anchor point="CENTER" relativeKey="$parent.levelBG" x="1" y="-1"/>
							</Anchors>
						</FontString>
					</Layer>
				</Layers>
				<Scripts>
					<OnEnter function="LB_ShowAbilityButtonTooltip"/>
					<OnLeave function="LB_HideAbilityTooltip"/>
				</Scripts>
			</Button>
			<Button parentArray="abilities" inherits="LBPetAbilityTemplate">
				<Anchors><Anchor point="BOTTOMLEFT" x="70" y="3" /></Anchors>
			</Button>
			<Button parentArray="abilities" inherits="LBPetAbilityTemplate" />
			<Button parentArray="abilities" inherits="LBPetAbilityTemplate" />
		</Frames>
		<Scripts><OnLoad>
			self.icon, self.iconBorder, self.level, self.levelBG = self.iconButton.icon, self.iconButton.border, self.iconButton.level, self.iconButton.levelBG
			for i=1,#self.abilities do
				if i > 1 then
					self.abilities[i]:SetPoint("LEFT", self.abilities[i-1], "RIGHT", 4, 0)
				end
				self.abilities[i]:SetHighlightTexture(nil)
			end
		</OnLoad></Scripts>
	</Frame>
	<Frame name="LBTeamPetTemplate" virtual="true">
		<Size x="302" y="38"/>
		<Layers>
			<Layer level="BACKGROUND">
				<Texture parentKey="bgStripe" alpha="0">
					<Anchors>
						<Anchor point="TOPLEFT" x="-6" y="0" />
						<Anchor point="BOTTOMRIGHT" x="12" y="-2" />
					</Anchors>
					<Color r="1" g="1" b="1" />
				</Texture>
			</Layer>
			<Layer level="ARTWORK">
				<FontString parentKey="name" inherits="GameFontNormal">
					<Anchors><Anchor point="TOPLEFT" x="42" y="-2" /></Anchors>
				</FontString>
				<FontString parentKey="stats" inherits="GameFontHighlightSmallLeftTop">
					<Size x="200" y="0"/>
					<Anchors><Anchor point="TOPLEFT" relativePoint="BOTTOMLEFT" relativeKey="$parent.name" y="-4" /></Anchors>
				</FontString>
			</Layer>
		</Layers>
		<Frames>
			<Button inherits="LBPetAbilityTemplate,LBKillablePetTemplate" parentKey="iconButton">
				<Anchors><Anchor point="TOPLEFT" y="-1" /></Anchors>
				<Frames>
					<Frame setAllPoints="true">
						<Layers>
							<Layer level="ARTWORK" textureSubLevel="3">
								<Texture file="Interface\AddOns\LittleBattler\i\cir" parentKey="levelBG">
									<Size x="20" y="20"/>
									<Anchors><Anchor point="BOTTOMRIGHT" relativeKey="$parent.border" x="7" y="-5"/></Anchors>
								</Texture>
							</Layer>
							<Layer level="OVERLAY">
								<FontString inherits="GameFontNormalSmall" parentKey="level">
									<Anchors>
										<Anchor point="CENTER" relativeKey="$parent.levelBG" x="1" y="-1"/>
									</Anchors>
								</FontString>
							</Layer>
						</Layers>
						<Scripts><OnLoad>
							local p = self:GetParent()
							p.level, p.levelBG = self.level, self.levelBG
						</OnLoad></Scripts>
					</Frame>
				</Frames>
				<Scripts>
					<OnLoad>self:RegisterForDrag("LeftButton")</OnLoad>
					<OnEnter function="LB_ShowAbilityButtonTooltip"/>
					<OnLeave function="LB_HideAbilityTooltip"/>
					<OnDragStart function="LB_PickupPet" />
					<OnReceiveDrag function="LB_PropagateReceiveDrag"/>
				</Scripts>
			</Button>
			<Button parentArray="abilities" inherits="LBPetAbilityTemplate" id="1" />
			<Button parentArray="abilities" inherits="LBPetAbilityTemplate" id="2" />
			<Button parentArray="abilities" inherits="LBPetAbilityTemplate" id="3" />
		</Frames>
		<Scripts><OnLoad>
			self.icon, self.iconBorder, self.level, self.levelBG = self.iconButton.icon, self.iconButton.iconBorder, self.iconButton.level, self.iconButton.levelBG
			self:EnableMouse(true)
			for i=1,#self.abilities do
				self.abilities[i]:SetPoint("RIGHT", -112+36*i, 0)
			end
		</OnLoad>
		<OnReceiveDrag>
			local slot, ctype, cguid = self:GetID(), GetCursorInfo()
			if ctype == "battlepet" and cguid then
				C_PetJournal.SetPetLoadOutInfo(slot, cguid)
				if cguid == LB_CursorPetGUID and type(LB_CursorPetInfo) == "string" then
					local b1, b2, b3 = LB_CursorPetInfo:match(":(%d+):(%d+):(%d+)#")
					-- Iterator is fragile; delay update until we're done
					for i, aid, bid in R_PetJournal.LoadOutAbilities(slot) do
						b1, b2, b3 = b2, b3, bid == tonumber(b1) and bid or nil
					end
					for i=1,3 do
						b1, b2, b3 = b2, b3, b1 and C_PetJournal.SetAbility(slot, i, b1)
					end
				end
				ClearCursor()
			end
		</OnReceiveDrag></Scripts>
	</Frame>
	<Button name="LBHealButtonTemplate" virtual="true">
		<Size x="19" y="19"/>
		<NormalTexture inherits="ActionBarFlyoutButton-IconFrame" />
		<HighlightTexture file="Interface\Buttons\ButtonHilight-Square" alphaMode="ADD"/>
		<PushedTexture file="Interface\Buttons\UI-Quickslot-Depress"/>
		<Scripts>
			<OnEnter>
				GameTooltip:SetOwner(self, "ANCHOR_NONE")
				GameTooltip:SetPoint("TOPLEFT", self, "TOPRIGHT", 2, 0)
				if self:GetAttribute("spell") then
					GameTooltip:SetSpellByID(self:GetAttribute("spell"))
				else
					GameTooltip:SetHyperlink(self:GetAttribute("item"))
				end
			</OnEnter>
			<OnLeave> if GameTooltip:IsOwned(self) then GameTooltip:Hide() end </OnLeave>
		</Scripts>
	</Button>
	<Button name="LBHealButtonLargeTemplate" virtual="true" inherits="LBHealButtonTemplate">
		<Size x="32" y="32" />
		<NormalTexture file="Interface\Buttons\UI-Quickslot2">
			<Anchors>
				<Anchor point="TOPLEFT" x="-12" y="12"/>
				<Anchor point="BOTTOMRIGHT" x="12" y="-12"/>
			</Anchors>
		</NormalTexture>
	</Button>
	<Frame name="LBDividerTemplate" virtual="true">
		<Size x="322" y="14"/>
		<Layers>
			<Layer level="BACKGROUND">
				<Texture setallpoints="true" file="Interface\Buttons\CollapsibleHeader">
					<TexCoords left="0.48046875" right="0.98046875" top="0.01562500" bottom="0.26562500"/>
				</Texture>
			</Layer>
			<Layer level="OVERLAY">
				<FontString inherits="GameFontNormalSmall" parentKey="text">
					<Anchors><Anchor point="CENTER" y="1" /></Anchors>
				</FontString>
			</Layer>
		</Layers>
	</Frame>

	<Frame name="LittleBattlerTeam2" parent="GossipFrame" hidden="true">
		<Size x="322" y="406"/>
		<Anchors><Anchor point="TOPLEFT" x="7" y="-62"/></Anchors>
		<Layers>
			<Layer level="BORDER">
				<Texture setAllpoints="true" file="Interface\FrameGeneral\UI-Background-Marble" horizTile="true" vertTile="true" />
			</Layer>
		</Layers>
		<Frames>
			<Frame parentArray="pets" inherits="LBTamerPetTemplate">
				<Anchors><Anchor point="TOPLEFT" x="6" y="-6"/></Anchors>
			</Frame>
			<Frame parentArray="pets" inherits="LBTamerPetTemplate" />
			<Frame parentArray="pets" inherits="LBTamerPetTemplate" />
			<Frame parentKey="versus" inherits="LBDividerTemplate" />
			<Frame parentArray="team" inherits="LBTeamPetTemplate" id="1"/>
			<Frame parentArray="team" inherits="LBTeamPetTemplate" id="2"/>
			<Frame parentArray="team" inherits="LBTeamPetTemplate" id="3"/>
			<Frame parentKey="pool" hidden="true">
				<Size x="318" y="48"/>
				<Frames>
					<Frame parentKey="header" inherits="LBDividerTemplate">
						<Anchors><Anchor point="TOP" /></Anchors>
					</Frame>
					<Button inherits="LBPoolPetTemplate" parentArray="pets" hidden="true">
						<Anchors><Anchor point="TOPLEFT" x="0" y="-18" /></Anchors>
					</Button>
				</Frames>
			</Frame>
			<EditBox name="$parentSearch" parentKey="search" autofocus="false" inherits="SearchBoxTemplate" hidden="true">
				<Size x="320" y="20"/>
				<Anchors>
					<Anchor point="TOP" relativeKey="$parent.pool" relativePoint="BOTTOM" x="0" y="-3" />
				</Anchors>
				<Scripts>
					<OnLoad>
						(_G[self:GetName() .. "Left"] or self.Left):Hide();
						(_G[self:GetName() .. "Right"] or self.Right):Hide()
						local m = _G[self:GetName() .. "Middle"] or self.Middle
						m:SetPoint("LEFT") m:SetPoint("RIGHT")
						self.searchIcon:SetPoint("LEFT", 2, -2)
						SearchBoxTemplate_OnLoad(self)
					</OnLoad>
				</Scripts>
			</EditBox>

			<Button inherits="UIPanelButtonTemplate" parentKey="fight">
				<Size x="102" y="22"/>
				<Anchors><Anchor point="BOTTOMRIGHT" relativeTo="GossipFrame" relativePoint="BOTTOMRIGHT" x="-6" y="4"/></Anchors>
				<Scripts><OnClick> (self.gossipId and SelectGossipOption or HideUIPanel)(self.gossipId or GossipFrame) </OnClick></Scripts>
			</Button>
			<Button inherits="SecureActionButtonTemplate" parentKey="fight2" hidden="true">
				<Attributes><Attribute name="type" value="macro"/></Attributes>
				<Scripts>
					<OnLoad>
						self:RegisterEvent("PLAYER_REGEN_DISABLED")
						self:RegisterEvent("PLAYER_REGEN_ENABLED")
						self.fight = self:GetParent().fight
						self:GetScript("OnEvent")(self, "PLAYER_REGEN_ENABLED")
					</OnLoad>
					<OnEvent>
						if event == "PLAYER_REGEN_DISABLED" then
							self:SetParent(nil)
							self:ClearAllPoints()
							self:Hide()
							self.fight:UnlockHighlight()
							self.fight:SetButtonState("NORMAL")
						else
							self:SetParent(self.fight)
							self:SetAllPoints()
							self:Show()
						end
						self:SetAttribute("macrotext", "")
					</OnEvent>
					<PreClick>
						if not InCombatLockdown() and self.fight.gossipId then
							self:SetAttribute("macrotext", LB_Fight_GetPreFightMacro() or "")
						end
					</PreClick>
					<PostClick>self.fight:Click()</PostClick>
					<OnEnter>self.fight:LockHighlight() self.fight:GetScript("OnEnter")(self.fight)</OnEnter>
					<OnLeave>self.fight:UnlockHighlight() self.fight:GetScript("OnLeave")(self.fight)</OnLeave>
					<OnMouseDown>self.fight:SetButtonState("PUSHED") self.fight:GetScript("OnMouseDown")(self.fight, button)</OnMouseDown>
					<OnMouseUp>self.fight:SetButtonState("NORMAL") self.fight:GetScript("OnMouseUp")(self.fight, button)</OnMouseUp>
				</Scripts>
			</Button>
			<Frame parentKey="healing">
				<Size x="84" y="19"/>
				<Anchors><Anchor point="TOPLEFT" relativePoint="BOTTOMLEFT" x="2" y="-4" /></Anchors>
				<Frames>
					<Button parentArray="buttons" inherits="LBHealButtonTemplate,SecureActionButtonTemplate">
						<Attributes><Attribute name="type" value="spell"/><Attribute name="spell" type="number" value="125439"/></Attributes>
						<Layers><Layer level="ARTWORK"><Texture file="Interface\Icons\spell_misc_petheal" setAllPoints="true" parentKey="icon" /></Layer></Layers>
						<Anchors><Anchor point="LEFT" /></Anchors>
						<Frames><Cooldown parentKey="cd" inherits="CooldownFrameTemplate"/></Frames>
					</Button>
					<Button parentArray="buttons" inherits="LBHealButtonTemplate,SecureActionButtonTemplate">
						<Attributes><Attribute name="type" value="item"/><Attribute name="item" value="item:86143" /></Attributes>
						<Layers><Layer level="ARTWORK"><Texture file="Interface\Icons\inv_misc_bandage_05" setAllPoints="true" parentKey="icon" /></Layer></Layers>
					</Button>
					<Button parentArray="buttons" inherits="LBHealButtonTemplate,SecureActionButtonTemplate">
						<Attributes><Attribute name="type" value="macro"/><Attribute name="item" value="item:98114" /></Attributes>
						<Layers><Layer level="ARTWORK"><Texture file="Interface\Icons\inv_misc_food_65" setAllPoints="true" parentKey="icon" /></Layer></Layers>
					</Button>
					<Button parentArray="buttons" inherits="LBHealButtonTemplate,SecureActionButtonTemplate">
						<Attributes><Attribute name="type" value="macro"/><Attribute name="item" value="item:98112" /></Attributes>
						<Layers><Layer level="ARTWORK"><Texture file="Interface\Icons\inv_misc_food_53" setAllPoints="true" parentKey="icon" /></Layer></Layers>
					</Button>
				</Frames>
				<Scripts>
					<OnLoad>
						local m, b = ("%s %%s\n%s %%s"):format(SLASH_CANCELAURA1, SLASH_USE1), self.buttons
						b[3]:SetAttribute("macrotext", m:format(GetSpellInfo(142205), b[3]:GetAttribute("item")))
						b[4]:SetAttribute("macrotext", m:format(GetSpellInfo(142204), b[4]:GetAttribute("item")))
						self:RegisterEvent("PLAYER_REGEN_DISABLED")
						self:RegisterEvent("PLAYER_REGEN_ENABLED")
						self:RegisterEvent("SPELL_UPDATE_COOLDOWN")
						self.parent = self:GetParent()
						for i=2,#b do
							b[i]:SetPoint("LEFT", b[i-1], "RIGHT", (i == 3 and 12 or 2), 0)
						end
						function self:Update()
						  CooldownFrame_Set(b[1].cd, GetSpellCooldown(b[1]:GetAttribute("spell")))
							local canHeal = not UnitDebuff("player", GetSpellInfo(143999))
							b[1]:SetShown(canHeal)
							for i=2,#b do
								b[i]:SetShown((i > 2 or canHeal) and GetItemCount(b[i]:GetAttribute("item")) > 0)
							end
						end
						self:SetScript("OnShow", self.Update)
					</OnLoad>
					<OnEvent>
						if event == "PLAYER_REGEN_DISABLED" then
							self:SetParent(nil)
							self:ClearAllPoints()
							self:Hide()
							self:UnregisterEvent("SPELL_UPDATE_COOLDOWN")
						elseif event == "PLAYER_REGEN_ENABLED" then
							self:SetParent(self.parent)
							self:SetPoint("TOPLEFT", self.parent, "BOTTOMLEFT", 2, -4)
							self:Show()
							self:RegisterEvent("SPELL_UPDATE_COOLDOWN")
						elseif event == "SPELL_UPDATE_COOLDOWN" and self:IsShown() then
							self:Update()
						end
					</OnEvent>
				</Scripts>
			</Frame>
		</Frames>
		<Scripts>
			<OnLoad>
				for i=2,#self.pets do
					self.pets[i]:SetPoint("TOP", self.pets[i-1], "BOTTOM", 0, -10)
					self.pets[i].bgStripe:SetAlpha(i % 2 == 0 and 0.05 or 0)
				end
				for i=1,#self.team do
					if i > 1 then self.team[i]:SetPoint("TOP", self.team[i-1], "BOTTOM", 0, -2) end
					self.team[i].bgStripe:SetAlpha(i % 2 == 1 and 0.05 or 0)
				end
				setmetatable(self.pool.pets, {__index=function(pets, k)
					local leftSibling = type(k) == "number" and k > 1 and k &lt; 10 and rawget(pets, k-1)
					if leftSibling then
						local f = CreateFrame("BUTTON", nil, leftSibling:GetParent(), "LBPoolPetTemplate")
						f:SetPoint("LEFT", leftSibling, "RIGHT", 3, 0)
						pets[k] = f
						return f
					end
				end})
				self.versus:SetPoint("TOP", self.pets[#self.pets], "BOTTOM", 4, -10)
				self.versus.text:SetText("versus")
				self.pool:SetPoint("TOP", self.team[#self.team], "BOTTOM", 4, -1)
				self.pool.header.text:SetText("suggested pets")
				self.team[1]:SetPoint("TOP", self.versus, "BOTTOM", -4, -4)
			</OnLoad>
			<OnShow>GossipFrameGreetingPanel:Hide()</OnShow>
			<OnHide>GossipFrameGreetingPanel:Show() self:Hide()</OnHide>
		</Scripts>
	</Frame>

	<Frame name="LittleBattlerCelestialStatus" parent="LFGDungeonReadyDialogInstanceInfoFrame" hidden="true">
		<Size x="240" y="12" />
		<Anchors><Anchor point="TOP" relativePoint="BOTTOM" y="15" /></Anchors>
		<Layers><Layer level="OVERLAY">
			<FontString parentKey="status" inherits="GameFontHighlightSmall"><Anchors><Anchor point="TOP" y="-2" /></Anchors></FontString>
		</Layer></Layers>
		<Frames>
			<Frame parentKey="healing">
				<Size x="76" y="40"/>
				<Frames>
					<Button parentKey="ability" inherits="LBHealButtonLargeTemplate,SecureActionButtonTemplate">
						<Anchors><Anchor point="LEFT" x="4" /></Anchors>
						<Attributes><Attribute name="type" value="spell"/><Attribute name="spell" type="number" value="125439"/></Attributes>
						<Layers><Layer level="ARTWORK"><Texture file="Interface\Icons\spell_misc_petheal" setAllPoints="true" parentKey="icon" /></Layer></Layers>
						<Frames><Cooldown parentKey="cd" inherits="CooldownFrameTemplate"/></Frames>
					</Button>
					<Button parentKey="bandage" inherits="LBHealButtonLargeTemplate,SecureActionButtonTemplate">
						<Anchors><Anchor point="RIGHT" x="-4" /></Anchors>
						<Attributes><Attribute name="type" value="item"/><Attribute name="item" value="item:86143" /></Attributes>
						<Layers><Layer level="ARTWORK"><Texture file="Interface\Icons\inv_misc_bandage_05" setAllPoints="true" parentKey="icon" /></Layer></Layers>
					</Button>
				</Frames>
			</Frame>
		</Frames>
		<Scripts>
			<OnLoad>
				self:RegisterEvent("PLAYER_REGEN_DISABLED")
				self:RegisterEvent("PLAYER_REGEN_ENABLED")
				self:GetScript("OnEvent")(self, "PLAYER_REGEN_ENABLED")
				self:SetScript("OnHide", self.Hide)
				self.deadPets = {}
			</OnLoad>
			<OnEvent>
				if event == "PLAYER_REGEN_DISABLED" then
					self.healing:SetParent(nil)
					self.healing:ClearAllPoints()
					self.healing:Hide()
				else
					self.healing:SetParent(self)
					self.healing:SetPoint("TOP", self, "BOTTOM", 0, -4)
					self.healing:Show()
				end
			</OnEvent>
			<OnEnter>
				local t = self.deadPets
				if not t and t[1] then return end
				GameTooltip:SetOwner(self, "ANCHOR_NONE")
				GameTooltip:SetPoint("TOP", self.status, "BOTTOM", 0, -2)
				GameTooltip:AddLine("Injured pets", 1,1,1)
				for i=1, #t, 2 do
					GameTooltip:AddDoubleLine(t[i], t[i+1])
				end
				GameTooltip:Show()
			</OnEnter>
			<OnLeave>
				if GameTooltip:IsOwned(self) then GameTooltip:Hide() end
			</OnLeave>
		</Scripts>
	</Frame>

	<Script file="Tamers.lua" />
	<Script file="Junkpile.lua" />
	<Script file="UI-Common.lua" />
	<Script file="UI-FableTooltips.lua" />
	<Script file="UI-WorldMap.lua" />
	<Script file="UI-Prefight.lua" />
</Ui>